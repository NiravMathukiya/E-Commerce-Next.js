// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  phoneNumber String?
  role      String   @default("USER") //"USER" or "ADMIN"
  cart      Cart?
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Product {
  id          String     @id @default(uuid())
  name        String
  description String
  stock       Int
  price       Float
  imageUrl    String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  CartItem    CartItem[]
}

model Cart {
  id     String     @id @default(uuid())
  user   User       @relation(fields: [userId], references: [id])
  userId String     @unique
  items  CartItem[]
}

model CartItem {
  id        String  @id @default(uuid())
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int     @default(1)
  Order     Order?  @relation(fields: [orderId], references: [id])
  orderId   String?
}

model Order {
  id        String     @id @default(uuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @unique
  items     CartItem[]
  total     Float
  status    String     @default("PENDING") // "PENDING", "SHIPPED", 
  createdAt DateTime   @default(now())
}
